<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="ControllersLogin.php" path="/">
    <totals>
      <lines total="40" comments="1" code="39" executable="16" executed="15" percent="93.75"/>
      <methods count="3" tested="2" percent="66.67"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Server\api\ControllersLogin" start="7" executable="16" executed="15" crap="5.01">
      <namespace name="Server\api"/>
      <method name="__construct" signature="__construct($requestMethod, $db)" start="12" end="16" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="processRequest" signature="processRequest()" start="17" end="31" crap="3.01" executable="9" executed="8" coverage="88.888888888889"/>
      <method name="checkLogin" signature="checkLogin($username, $password)" start="32" end="37" crap="1" executable="4" executed="4" coverage="100"/>
    </class>
    <coverage>
      <line nr="13">
        <covered by="ControllersLoginTest::testCheckLoginAccess"/>
        <covered by="ControllersLoginTest::testCheckLoginRefused"/>
        <covered by="ControllersLoginTest::testProcessRequestCorrectMethod"/>
        <covered by="ControllersLoginTest::testProcessRequestWrongMethod"/>
      </line>
      <line nr="14">
        <covered by="ControllersLoginTest::testCheckLoginAccess"/>
        <covered by="ControllersLoginTest::testCheckLoginRefused"/>
        <covered by="ControllersLoginTest::testProcessRequestCorrectMethod"/>
        <covered by="ControllersLoginTest::testProcessRequestWrongMethod"/>
      </line>
      <line nr="16">
        <covered by="ControllersLoginTest::testCheckLoginAccess"/>
        <covered by="ControllersLoginTest::testCheckLoginRefused"/>
        <covered by="ControllersLoginTest::testProcessRequestCorrectMethod"/>
        <covered by="ControllersLoginTest::testProcessRequestWrongMethod"/>
      </line>
      <line nr="18">
        <covered by="ControllersLoginTest::testProcessRequestCorrectMethod"/>
        <covered by="ControllersLoginTest::testProcessRequestWrongMethod"/>
      </line>
      <line nr="19">
        <covered by="ControllersLoginTest::testProcessRequestCorrectMethod"/>
      </line>
      <line nr="20">
        <covered by="ControllersLoginTest::testProcessRequestCorrectMethod"/>
      </line>
      <line nr="21">
        <covered by="ControllersLoginTest::testProcessRequestCorrectMethod"/>
      </line>
      <line nr="22">
        <covered by="ControllersLoginTest::testProcessRequestCorrectMethod"/>
      </line>
      <line nr="26">
        <covered by="ControllersLoginTest::testProcessRequestCorrectMethod"/>
      </line>
      <line nr="29">
        <covered by="ControllersLoginTest::testProcessRequestWrongMethod"/>
      </line>
      <line nr="31">
        <covered by="ControllersLoginTest::testProcessRequestCorrectMethod"/>
      </line>
      <line nr="33">
        <covered by="ControllersLoginTest::testCheckLoginAccess"/>
        <covered by="ControllersLoginTest::testCheckLoginRefused"/>
        <covered by="ControllersLoginTest::testProcessRequestCorrectMethod"/>
      </line>
      <line nr="34">
        <covered by="ControllersLoginTest::testCheckLoginAccess"/>
        <covered by="ControllersLoginTest::testCheckLoginRefused"/>
        <covered by="ControllersLoginTest::testProcessRequestCorrectMethod"/>
      </line>
      <line nr="35">
        <covered by="ControllersLoginTest::testCheckLoginAccess"/>
        <covered by="ControllersLoginTest::testCheckLoginRefused"/>
        <covered by="ControllersLoginTest::testProcessRequestCorrectMethod"/>
      </line>
      <line nr="36">
        <covered by="ControllersLoginTest::testCheckLoginAccess"/>
        <covered by="ControllersLoginTest::testCheckLoginRefused"/>
        <covered by="ControllersLoginTest::testProcessRequestCorrectMethod"/>
      </line>
      <line nr="41">
        <covered by="ControllersLoginTest::testCheckLoginAccess"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Server</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">api</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="3">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Server</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">api</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">GatewaysUserTable</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4">
        <token name="T_COMMENT">//require("GatewaysUserTable.php");</token>
      </line>
      <line no="5"/>
      <line no="6"/>
      <line no="7">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ControllersLogin</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="8">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$requestMethod</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$usersGateway</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="11"/>
      <line no="12">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$requestMethod</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$db</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">requestMethod</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$requestMethod</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">usersGateway</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">GatewaysUserTable</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$db</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">processRequest</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">requestMethod</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"POST"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$postBody</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">file_get_contents</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"php://input"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$input</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">json_decode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$postBody</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">checkLogin</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$input</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">username</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$input</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">password</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">headers_sent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">header</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'status_code_header'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">            </token>
        <token name="T_ECHO">echo</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'body'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_ELSE">else</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Exception</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Request method not valid"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">checkLogin</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$username</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">usersGateway</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">login</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$username</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'status_code_header'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'HTTP/1.1 200 OK'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'body'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="39">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="40"/>
      <line no="41">
        <token name="T_CLOSE_TAG">?&gt;</token>
      </line>
    </source>
  </file>
</phpunit>
